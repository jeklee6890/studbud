{"mappings":"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","sources":["public/tasklist/tasklist.js"],"sourcesContent":["// Basic form DOM elements\nconst form = document.getElementById(\"taskform\");\nconst button = document.querySelector(\"#taskform > button\")\n\n// Selector for the tasklist output\nvar tasklist = document.querySelector(\"#tasklist > ul\");\n\n// DOM elements for the task input fields\nvar taskInput = document.getElementById(\"taskInput\");\nvar dueDateInput = document.getElementById(\"dueDateInput\");\nvar completionTimeInput = document.getElementById(\"completionTimeInput\");\nvar estimatedTimeInput = document.getElementById(\"estimatedTimeInput\");\nvar priorityInput = document.getElementById(\"priorityInput\");\n\n// an event listener for the 'add column' button which calls the addColumn() function\ndocument.getElementById(\"myBtn\").addEventListener(\"click\", addColumn); \n\n// creates a div with a h1 element with the text of \"new column\". then appends the text to h1, \n// the h1 to the div and the div to the div element with an id of 'k-board'  \nfunction addColumn() {\n    console.log(\"button clicked\");\n    var newColumn = document.createElement(\"div\");\n    var newHeading = document.createElement(\"h2\");\n    var headingText = document.createTextNode(\"new column\");\n    var kBoard = document.getElementById(\"k-board\");\n\n    var newButton = document.createElement(\"button\");\n    newButton.textContent = \"+ Add Task\";\n    newButton.className += \"add-task\";\n\n    newHeading.appendChild(headingText);\n    newColumn.appendChild(newHeading);\n    kBoard.appendChild(newColumn);\n    kBoard.appendChild(newButton);\n\n}\n\n\n\n\n// button to show task list \n// const targetDiv = document.getElementById(\"taskform\");\n// const btn = document.getElementById(\"add-task\");\n\n// btn.onclick = function () {\n//   if (targetDiv.style.display == \"none\") {\n//     targetDiv.style.display = \"block\";\n//   } else {\n//     targetDiv.style.display = \"none\";\n//   }\n// };\n\ndocument.getElementById(\"add-task\").addEventListener(\"click\", function(){\n    document.getElementById(\"task-grid\").classList.add(\"active\");\n})\n\n// Form submission event listener\nform.addEventListener(\"submit\", function(event) {\n    event.preventDefault();\n    let task = taskInput.value;\n    let dueDate = dueDateInput.value;\n    let completionTime = completionTimeInput.value;\n    let estimatedTime = estimatedTimeInput.value;\n    let priorityRating = priorityInput.options[priorityInput.selectedIndex].value;\n    if (task) {\n        addTask(task, dueDate, estimatedTime, priorityRating, completionTime, false);\n    }\n})\n\n// Create global array to track tasks\nvar taskListArray = [];\n\n// Function to add task with user inputs as parameters\nfunction addTask(taskDescription, dueDate, estimatedTime, priorityRating, completionTime, completionStatus) {\n    let d = new Date();\n    let dateCreated = d.getFullYear();\n    let task = {\n        id: Date.now(),\n        taskDescription,\n        dueDate,\n        dateCreated,\n        estimatedTime,\n        completionTime,\n        priorityRating,\n        estimatedTime,\n        completionStatus\n    };\n    taskListArray.push(task);\n    console.log(taskListArray);\n    renderTask(task);\n}\n\n// Function to display task on screen\nfunction renderTask(task) {\n\n    // Call function - checks if a task has been added\n    updateEmpty();\n\n    // Create HTML elements\n    let item = document.createElement(\"li\");\n    item.setAttribute('data-id', task.id);\n    item.innerHTML = \"<p>\" + task.taskDescription + \"</p>\";\n\n    tasklist.appendChild(item);\n\n    // Extra Task DOM elements\n    let delButton = document.createElement(\"button\");\n    let delButtonText = document.createTextNode(\"Delete Task\");\n    delButton.appendChild(delButtonText);\n    item.appendChild(delButton);\n\n\n    // Event Listeners for DOM elements\n    delButton.addEventListener(\"click\", function(event) {\n        event.preventDefault();\n        let id = event.target.parentElement.getAttribute('data-id');\n        let index = taskListArray.findIndex(task => task.id === Number(id));\n        removeItemFromArray(taskListArray, index)\n        console.log(taskListArray);\n        updateEmpty();\n        item.remove();\n    })\n\n    // Clear the input form\n    form.reset();\n}\n\n\n\n\n// Function to remove item from array\nfunction removeItemFromArray(arr, index) {\n    if (index > -1) {\n        arr.splice(index, 1)\n    }\n    return arr;\n}\n\n\n// Function to hide the 'you haven't added any tasks' text\nfunction updateEmpty() {\n    if (taskListArray.length > 0) {\n        document.getElementById('emptyList').style.display = 'none';\n    } else {\n        document.getElementById('emptyList').style.display = 'block';\n    }\n}\n"],"names":[],"version":3,"file":"tasklist.d63667e4.js.map","sourceRoot":"/__parcel_source_root/"}