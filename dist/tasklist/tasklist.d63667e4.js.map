{"mappings":"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","sources":["public/tasklist/tasklist.js"],"sourcesContent":["// Basic form DOM elements\nconst form = document.getElementById(\"taskform\");\nconst button = document.querySelector(\"#taskform > button\")\n\n// Selector for the tasklist output\nvar tasklist = document.querySelector(\"#tasklist > ul\");\n\n// DOM elements for the task input fields\nvar taskInput = document.getElementById(\"taskInput\");\nvar dueDateInput = document.getElementById(\"dueDateInput\");\nvar completionTimeInput = document.getElementById(\"completionTimeInput\");\nvar estimatedTimeInput = document.getElementById(\"estimatedTimeInput\");\nvar priorityInput = document.getElementById(\"priorityInput\");\n\n// Form submission event listener\nform.addEventListener(\"submit\", function(event) {\n    event.preventDefault();\n    let task = taskInput.value;\n    let dueDate = dueDateInput.value;\n    let completionTime = completionTimeInput.value;\n    let estimatedTime = estimatedTimeInput.value;\n    let priorityRating = priorityInput.options[priorityInput.selectedIndex].value;\n    if (task) {\n        addTask(task, dueDate, estimatedTime, priorityRating, completionTime, false);\n    }\n})\n\n// Create global array to track tasks\nvar taskListArray = [];\n\n// Function to add task with user inputs as parameters\nfunction addTask(taskDescription, dueDate, estimatedTime, priorityRating, completionTime, completionStatus) {\n    let d = new Date();\n    let dateCreated = d.getFullYear();\n    let task = {\n        id: Date.now(),\n        taskDescription,\n        dueDate,\n        dateCreated,\n        estimatedTime,\n        completionTime,\n        priorityRating,\n        estimatedTime,\n        completionStatus\n    };\n    taskListArray.push(task);\n    console.log(taskListArray);\n    renderTask(task);\n}\n\n// Function to display task on screen\nfunction renderTask(task) {\n\n    // Call function - checks if a task has been added\n    updateEmpty();\n\n    // Create HTML elements\n    let item = document.createElement(\"li\");\n    item.setAttribute('data-id', task.id);\n    item.innerHTML = \"<p>\" + task.taskDescription + \"</p>\";\n\n    tasklist.appendChild(item);\n\n    // Extra Task DOM elements\n    let delButton = document.createElement(\"button\");\n    let delButtonText = document.createTextNode(\"Delete Task\");\n    delButton.appendChild(delButtonText);\n    item.appendChild(delButton);\n\n\n    // Event Listeners for DOM elements\n    delButton.addEventListener(\"click\", function(event) {\n        event.preventDefault();\n        let id = event.target.parentElement.getAttribute('data-id');\n        let index = taskListArray.findIndex(task => task.id === Number(id));\n        removeItemFromArray(taskListArray, index)\n        console.log(taskListArray);\n        updateEmpty();\n        item.remove();\n    })\n\n    // Clear the input form\n    form.reset();\n}\n\n\n\n\nlet cards = document.querySelector('.cards');\nvar request = new XMLHttpRequest();\n\nrequest.onload = function () {\n  let data = JSON.parse(this.response); \n  console.log(data);\n  \n    if (request.status >= 200 && request.status < 400) {\n        data.forEach(function (task) {\n        // console.log(task);\n\n        // card container\n        let card = document.createElement('div');\n        card.setAttribute('class', 'card');\n\n        // creating movie titles \n        // document.getElementById('taskInput');\n        // let heading = document.createElement('h2');\n        // heading.textContent = task.input;\n\n\n        // add movie titles and descriptions to the card \n        cards.appendChild(card);\n        card.appendChild(heading);\n        });\n    }\n}\n\n\n\n\n\n\n\n// Function to remove item from array\nfunction removeItemFromArray(arr, index) {\n    if (index > -1) {\n        arr.splice(index, 1)\n    }\n    return arr;\n}\n\n\n// Function to hide the 'you haven't added any tasks' text\nfunction updateEmpty() {\n    if (taskListArray.length > 0) {\n        document.getElementById('emptyList').style.display = 'none';\n    } else {\n        document.getElementById('emptyList').style.display = 'block';\n    }\n}"],"names":[],"version":3,"file":"tasklist.d63667e4.js.map","sourceRoot":"/__parcel_source_root/"}